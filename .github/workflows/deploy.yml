name: Deploy to AWS

on:
  push:
    branches:
      - main
      - SCRUM-51

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Debug secrets
        run: |
          echo "AWS_ACCESS_KEY_ID exists: ${{ secrets.AWS_ACCESS_KEY_ID != '' }}"
          echo "AWS_SECRET_ACCESS_KEY exists: ${{ secrets.AWS_SECRET_ACCESS_KEY != '' }}"
          echo "SSH_PRIVATE_KEY exists: ${{ secrets.SSH_PRIVATE_KEY != '' }}"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Get instance IP
        id: get-ip
        run: |
          INSTANCE_IP=$(aws cloudformation describe-stacks \
            --stack-name AquaChargeStack-dev \
            --query 'Stacks[0].Outputs[?OutputKey==`InstancePublicIp`].OutputValue' \
            --output text)
          echo "INSTANCE_IP=$INSTANCE_IP" >> $GITHUB_OUTPUT

      - name: Setup SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/aquacharge-key.pem
          chmod 400 ~/.ssh/aquacharge-key.pem
          ssh-keyscan -H ${{ steps.get-ip.outputs.INSTANCE_IP }} >> ~/.ssh/known_hosts

      - name: Deploy application
        run: |
          rsync -av --progress \
            --exclude='__pycache__' \
            --exclude='*.pyc' \
            --exclude='node_modules' \
            --exclude='.git' \
            --exclude='.github' \
            --exclude='.vscode' \
            --exclude='*.log' \
            --exclude='.DS_Store' \
            --exclude='cdk.out' \
            --exclude='infra' \
            -e "ssh -i ~/.ssh/aquacharge-key.pem -o StrictHostKeyChecking=no" \
            backend frontend docker-compose.prod.yaml \
            ec2-user@${{ steps.get-ip.outputs.INSTANCE_IP }}:/home/ec2-user/aquacharge/

      - name: Restart containers
        run: |
          ssh -i ~/.ssh/aquacharge-key.pem -o StrictHostKeyChecking=no \
            ec2-user@${{ steps.get-ip.outputs.INSTANCE_IP }} << 'EOF'
          cd /home/ec2-user/aquacharge
          sudo docker-compose -f docker-compose.prod.yaml down
          sudo docker-compose -f docker-compose.prod.yaml up -d --build
          sleep 5
          sudo docker-compose -f docker-compose.prod.yaml ps
          EOF

      - name: Health check
        run: |
          sleep 10
          curl -f http://${{ steps.get-ip.outputs.INSTANCE_IP }}:5050/api/health || exit 1
          echo "âœ… Deployment successful!"
